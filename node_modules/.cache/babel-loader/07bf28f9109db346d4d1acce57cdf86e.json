{"ast":null,"code":"var _jsxFileName = \"/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FootballTransfer.js\";\n\n/* global fetch */\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { GeoJsonLayer, ArcLayer } from '@deck.gl/layers';\nimport { scaleQuantile } from 'd3-scale';\nimport { COORDINATE_SYSTEM, OrbitView, LinearInterpolator } from '@deck.gl/core';\nimport tokens from '../secret/tokens.json';\nimport stadiums from './DataViz/Data/stadiums.json';\nimport transfers from './DataViz/Data/2019/english_transfers.json'; // Set your mapbox token here\n\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n// Source data GeoJSON\n\nconst DATA_URL = 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/arc/counties.json'; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 50,\n  latitude: 40.7,\n  zoom: 3,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n/* eslint-disable react/no-deprecated */\n\nexport default class FootballTransfer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  _renderLayers() {\n    const {\n      data,\n      strokeWidth = 2\n    } = this.props;\n    return [new ArcLayer({\n      id: 'arc',\n      data: transfers,\n      getSourcePosition: p => {\n        var _stadiums$p$from;\n\n        return (_stadiums$p$from = stadiums[p.from]) === null || _stadiums$p$from === void 0 ? void 0 : _stadiums$p$from.position;\n      },\n      getTargetPosition: p => {\n        var _stadiums$p$to;\n\n        return (_stadiums$p$to = stadiums[p.to]) === null || _stadiums$p$to === void 0 ? void 0 : _stadiums$p$to.position;\n      },\n      getHeight: 0.5,\n      getSourceColor: [0, 255, 0],\n      getTargetColor: [0, 0, 255],\n      getWidth: 100\n    })];\n  }\n\n  render() {\n    const {\n      mapStyle = 'mapbox://styles/mapbox/light-v9'\n    } = this.props;\n    return /*#__PURE__*/React.createElement(DeckGL, {\n      layers: this._renderLayers(),\n      initialViewState: INITIAL_VIEW_STATE,\n      controller: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FootballTransfer.js"],"names":["React","Component","render","StaticMap","DeckGL","GeoJsonLayer","ArcLayer","scaleQuantile","COORDINATE_SYSTEM","OrbitView","LinearInterpolator","tokens","stadiums","transfers","MAPBOX_TOKEN","mapbox","DATA_URL","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","FootballTransfer","constructor","props","state","_renderLayers","data","strokeWidth","id","getSourcePosition","p","from","position","getTargetPosition","to","getHeight","getSourceColor","getTargetColor","getWidth","mapStyle"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,SAAR,QAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAAQC,YAAR,EAAsBC,QAAtB,QAAqC,iBAArC;AACA,SAAQC,aAAR,QAA4B,UAA5B;AACA,SAAQC,iBAAR,EAA2BC,SAA3B,EAAsCC,kBAAtC,QAA+D,eAA/D;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,SAAP,MAAsB,4CAAtB,C,CAEA;;AACA,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAA5B,C,CAAoC;AAEpC;;AACA,MAAMC,QAAQ,GACZ,wFADF,C,CAC4F;;AAE5F,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAAE,EADc;AAEzBC,EAAAA,QAAQ,EAAE,IAFe;AAGzBC,EAAAA,IAAI,EAAE,CAHmB;AAIzBC,EAAAA,OAAO,EAAE,EAJgB;AAKzBC,EAAAA,KAAK,EAAE,EALkB;AAMzBC,EAAAA,OAAO,EAAE;AANgB,CAA3B;AASA;;AACA,eAAe,MAAMC,gBAAN,SAA+BvB,SAA/B,CAAyC;AACtDwB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAIDC,EAAAA,aAAa,GAAG;AACd,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,WAAW,GAAG;AAArB,QAA0B,KAAKJ,KAArC;AAEA,WAAO,CACL,IAAIpB,QAAJ,CAAa;AACXyB,MAAAA,EAAE,EAAE,KADO;AAEXF,MAAAA,IAAI,EAAEhB,SAFK;AAGXmB,MAAAA,iBAAiB,EAAEC,CAAC;AAAA;;AAAA,mCAAIrB,QAAQ,CAACqB,CAAC,CAACC,IAAH,CAAZ,qDAAI,iBAAkBC,QAAtB;AAAA,OAHT;AAIXC,MAAAA,iBAAiB,EAAEH,CAAC;AAAA;;AAAA,iCAAIrB,QAAQ,CAACqB,CAAC,CAACI,EAAH,CAAZ,mDAAI,eAAgBF,QAApB;AAAA,OAJT;AAKXG,MAAAA,SAAS,EAAE,GALA;AAMXC,MAAAA,cAAc,EAAE,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CANL;AAOXC,MAAAA,cAAc,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CAPL;AAQXC,MAAAA,QAAQ,EAAE;AARC,KAAb,CADK,CAAP;AAYD;;AAEDvC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACwC,MAAAA,QAAQ,GAAG;AAAZ,QAAiD,KAAKhB,KAA5D;AAEA,wBACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKE,aAAL,EAAhB;AAAsC,MAAA,gBAAgB,EAAEX,kBAAxD;AAA4E,MAAA,UAAU,EAAE,IAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAKD;;AAjCqD","sourcesContent":["/* global fetch */\nimport React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {GeoJsonLayer, ArcLayer} from '@deck.gl/layers';\nimport {scaleQuantile} from 'd3-scale';\nimport {COORDINATE_SYSTEM, OrbitView, LinearInterpolator} from '@deck.gl/core';\n\nimport tokens from '../secret/tokens.json';\nimport stadiums from './DataViz/Data/stadiums.json';\nimport transfers from './DataViz/Data/2019/english_transfers.json';\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\n// Source data GeoJSON\nconst DATA_URL =\n  'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/arc/counties.json'; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 50,\n  latitude: 40.7,\n  zoom: 3,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n\n/* eslint-disable react/no-deprecated */\nexport default class FootballTransfer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n\n\n  _renderLayers() {\n    const {data, strokeWidth = 2} = this.props;\n\n    return [\n      new ArcLayer({\n        id: 'arc',\n        data: transfers,\n        getSourcePosition: p => stadiums[p.from]?.position,\n        getTargetPosition: p => stadiums[p.to]?.position,\n        getHeight: 0.5,\n        getSourceColor: [0, 255, 0],\n        getTargetColor: [0, 0, 255],\n        getWidth: 100\n      })\n    ];\n  }\n\n  render() {\n    const {mapStyle = 'mapbox://styles/mapbox/light-v9'} = this.props;\n\n    return (\n      <DeckGL layers={this._renderLayers()} initialViewState={INITIAL_VIEW_STATE} controller={true}>\n      \n      </DeckGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}