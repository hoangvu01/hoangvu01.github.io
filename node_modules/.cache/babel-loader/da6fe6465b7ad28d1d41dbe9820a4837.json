{"ast":null,"code":"var _jsxFileName = \"/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FlightFlat.js\";\n\n/* global fetch */\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { ArcLayer, ScatterplotLayer } from '@deck.gl/layers';\nimport { scaleQuantile } from 'd3-scale';\nimport tokens from '../secret/tokens.json';\nimport airports from './DataViz/Data/airports.json';\nimport routes from './DataViz/Data/routes.json'; // Set your mapbox token here\n\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n// Source data GeoJSON\n\nconst DATA_URL = 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/arc/counties.json'; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.5,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n/* eslint-disable react/no-deprecated */\n\nexport default class FlightFlat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewState: INITIAL_VIEW_STATE\n    };\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n  }\n\n  _onViewStateChange({\n    viewState\n  }) {\n    this.setState({\n      viewState\n    });\n  }\n\n  render() {\n    const {\n      mapStyle = 'mapbox://styles/mapbox/dark-v9'\n    } = this.props;\n    const {\n      viewState\n    } = this.state;\n    const layers = [new ScatterplotLayer({\n      id: 'airports',\n      data: airports,\n      pickable: true,\n      opacity: 1,\n      stroked: true,\n      filled: true,\n      radiusScale: 6,\n      getRadius: 3000,\n      getPosition: d => d.position,\n      getFillColor: [113, 200, 235],\n      transitions: {\n        getRadius: {\n          type: 'interpolation',\n          duration: 5000,\n          easing: value => value * 1.1 // grow from size 0\n\n        },\n        getFillColor: {\n          duration: 3000,\n          enter: value => [0, 0, 0]\n        }\n      },\n      onHover: ({\n        object,\n        x,\n        y\n      }) => {\n        const tooltip = `${object.from.label} to ${object.to.label}`;\n      }\n    }), new ArcLayer({\n      id: 'flights',\n      data: routes,\n      pickable: true,\n      getHeight: () => Math.random() * 0.3 + 0.3,\n      getWidth: 0.2,\n      opacity: 0.7,\n      getSourcePosition: d => d.from,\n      getTargetPosition: d => d.to,\n      getSourceColor: [0, 207, 82],\n      getTargetColor: [0, 198, 144],\n      transitions: {\n        getSourceColor: {\n          duration: 5000,\n          enter: value => [0, 0, 0]\n        },\n        getTargetColor: {\n          duration: 10000,\n          enter: value => [0, 0, 0]\n        }\n      }\n    })];\n    return /*#__PURE__*/React.createElement(DeckGL, {\n      viewState: viewState,\n      position: \"relative\",\n      layers: layers,\n      initialViewState: INITIAL_VIEW_STATE,\n      controller: true,\n      parameters: {\n        clearColor: [0.04, 0.04, 0.04, 0.5]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StaticMap, {\n      position: \"relative\",\n      reuseMaps: true,\n      mapStyle: mapStyle,\n      preventStyleDiffing: true,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FlightFlat.js"],"names":["React","Component","render","StaticMap","DeckGL","ArcLayer","ScatterplotLayer","scaleQuantile","tokens","airports","routes","MAPBOX_TOKEN","mapbox","DATA_URL","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","FlightFlat","constructor","props","state","viewState","_onViewStateChange","bind","setState","mapStyle","layers","id","data","pickable","opacity","stroked","filled","radiusScale","getRadius","getPosition","d","position","getFillColor","transitions","type","duration","easing","value","enter","onHover","object","x","y","tooltip","from","label","to","getHeight","Math","random","getWidth","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","clearColor"],"mappings":"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","sourcesContent":["/* global fetch */\nimport React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {ArcLayer, ScatterplotLayer} from '@deck.gl/layers';\nimport {scaleQuantile} from 'd3-scale';\n\nimport tokens from '../secret/tokens.json';\nimport airports from './DataViz/Data/airports.json';\nimport routes from './DataViz/Data/routes.json';\n// Set your mapbox token here\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\n// Source data GeoJSON\nconst DATA_URL =\n  'https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/arc/counties.json'; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.5,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n\n/* eslint-disable react/no-deprecated */\nexport default class FlightFlat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: INITIAL_VIEW_STATE\n    };\n\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n  }\n\n  _onViewStateChange({viewState}) {\n   this.setState({viewState});\n }\n\n  render() {\n    const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\n    const {viewState} = this.state;\n\n    const layers = [\n      new ScatterplotLayer({\n        id: 'airports',\n        data: airports,\n        pickable: true,\n        opacity: 1,\n        stroked: true,\n        filled: true,\n        radiusScale: 6,\n        getRadius: 3000,\n        getPosition: d => d.position,\n        getFillColor: [113, 200, 235],\n        transitions: {\n          getRadius: {\n            type: 'interpolation',\n            duration: 5000,\n            easing: value => value * 1.1 // grow from size 0\n          },\n          getFillColor: {\n            duration: 3000,\n            enter: value => [0, 0, 0]\n          }\n        },\n        onHover: ({object, x, y}) => {\n          const tooltip = `${object.from.label} to ${object.to.label}`;\n        }\n      }),\n      new ArcLayer({\n        id: 'flights',\n        data: routes,\n        pickable: true,\n        getHeight: () => Math.random() * 0.3 + 0.3,\n        getWidth: 0.2,\n        opacity: 0.7,\n        getSourcePosition: d => d.from,\n        getTargetPosition: d => d.to,\n        getSourceColor: [0, 207, 82],\n        getTargetColor: [0, 198, 144],\n        transitions: {\n          getSourceColor: {\n            duration: 5000,\n            enter: value => [0, 0, 0]\n          },\n          getTargetColor: {\n            duration: 10000,\n            enter: value => [0,0,0]\n          }\n        },\n      })\n    ];\n\n    return (\n        <DeckGL\n          viewState={viewState}\n          position='relative'\n          layers={layers}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n          parameters={{\n            clearColor:[0.04,0.04,0.04,0.5]\n          }}\n        >\n          <StaticMap\n            position='relative'\n            reuseMaps\n            mapStyle={mapStyle}\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n\n        </DeckGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}