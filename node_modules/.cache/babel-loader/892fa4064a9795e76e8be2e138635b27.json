{"ast":null,"code":"var _jsxFileName = \"/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/DeerCloud.js\";\nimport React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { PointCloudLayer } from '@deck.gl/layers';\nimport { MapView } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport tokens from '../secret/tokens.json';\nimport vertices from './PointCloud/deer.json'; // Set your mapbox token here\n\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 0.1,\n  pitch: 30,\n  bearing: 15\n};\n/* eslint-disable react/no-deprecated */\n\nexport default class Deer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewState: INITIAL_VIEW_STATE,\n      hoveredObject: null\n    };\n    this._onHover = this._onHover.bind(this);\n    this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  _onHover({\n    x,\n    y,\n    object\n  }) {\n    this.setState({\n      x,\n      y,\n      hoveredObject: object\n    });\n  }\n\n  _renderTooltip() {\n    const {\n      hoveredObject,\n      x,\n      y\n    } = this.state || {};\n    return hoveredObject && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mapTooltip\",\n      style: {\n        left: x,\n        top: y\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \" \", hoveredObject.name, \" \"));\n  }\n\n  render() {\n    const layers = [new PointCloudLayer({\n      id: d => d.id,\n      data: vertices,\n      pickable: true,\n      getRadius: 100,\n      getColour: [255, 0, 0],\n      getPosition: d => d.position\n    })];\n    return /*#__PURE__*/React.createElement(DeckGL, {\n      position: \"relative\",\n      layers: layers,\n      initialViewState: INITIAL_VIEW_STATE,\n      controller: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/DeerCloud.js"],"names":["React","Component","StaticMap","DeckGL","PointCloudLayer","MapView","GL","tokens","vertices","MAPBOX_TOKEN","mapbox","INITIAL_VIEW_STATE","longitude","latitude","zoom","pitch","bearing","Deer","constructor","props","state","viewState","hoveredObject","_onHover","bind","_renderTooltip","x","y","object","setState","left","top","name","render","layers","id","d","data","pickable","getRadius","getColour","getPosition","position"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,EAAP,MAAe,oBAAf;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAGA;;AACA,MAAMC,YAAY,GAAGF,MAAM,CAACG,MAA5B,C,CAAoC;;AAEpC,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,SAAS,EAAE,CADc;AAEzBC,EAAAA,QAAQ,EAAE,EAFe;AAGzBC,EAAAA,IAAI,EAAE,GAHmB;AAIzBC,EAAAA,KAAK,EAAE,EAJkB;AAKzBC,EAAAA,OAAO,EAAE;AALgB,CAA3B;AAUA;;AACA,eAAe,MAAMC,IAAN,SAAmBhB,SAAnB,CAA6B;AAC1CiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEV,kBADA;AAEXW,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,QAAQ,CAAC;AAACG,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA;AAAP,GAAD,EAAiB;AACvB,SAAKC,QAAL,CAAc;AAACH,MAAAA,CAAD;AAAIC,MAAAA,CAAJ;AAAOL,MAAAA,aAAa,EAAEM;AAAtB,KAAd;AACD;;AAEDH,EAAAA,cAAc,GAAG;AACf,UAAM;AAACH,MAAAA,aAAD;AAAgBI,MAAAA,CAAhB;AAAmBC,MAAAA;AAAnB,QAAwB,KAAKP,KAAL,IAAc,EAA5C;AACA,WAAOE,aAAa,iBAClB;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,KAAK,EAAE;AAACQ,QAAAA,IAAI,EAAEJ,CAAP;AAAUK,QAAAA,GAAG,EAAEJ;AAAf,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAOL,aAAa,CAACU,IAArB,MADF,CADF;AAKD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAMC,MAAM,GAAG,CACb,IAAI9B,eAAJ,CAAoB;AAClB+B,MAAAA,EAAE,EAAEC,CAAC,IAAIA,CAAC,CAACD,EADO;AAElBE,MAAAA,IAAI,EAAE7B,QAFY;AAGlB8B,MAAAA,QAAQ,EAAE,IAHQ;AAIlBC,MAAAA,SAAS,EAAE,GAJO;AAKlBC,MAAAA,SAAS,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CALO;AAMlBC,MAAAA,WAAW,EAAEL,CAAC,IAAIA,CAAC,CAACM;AANF,KAApB,CADa,CAAf;AAWA,wBACI,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAC,UADX;AAEE,MAAA,MAAM,EAAER,MAFV;AAGE,MAAA,gBAAgB,EAAEvB,kBAHpB;AAIE,MAAA,UAAU,EAAE,IAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUD;;AAjDyC","sourcesContent":["import React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { PointCloudLayer } from '@deck.gl/layers';\nimport { MapView } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\n\nimport tokens from '../secret/tokens.json';\nimport vertices from './PointCloud/deer.json';\n\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 0.1,\n  pitch: 30,\n  bearing: 15\n};\n\n\n\n/* eslint-disable react/no-deprecated */\nexport default class Deer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: INITIAL_VIEW_STATE,\n      hoveredObject: null\n    };\n\n    this._onHover = this._onHover.bind(this);\n    this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  _onHover({x, y, object}) {\n    this.setState({x, y, hoveredObject: object});\n  }\n\n  _renderTooltip() {\n    const {hoveredObject, x, y} = this.state || {};\n    return hoveredObject && (\n      <div id='mapTooltip' style={{left: x, top: y}}>\n        <h4> { hoveredObject.name } </h4>\n      </div>\n    );\n  }\n\n  render() {\n\n    const layers = [\n      new PointCloudLayer({\n        id: d => d.id,\n        data: vertices,\n        pickable: true,\n        getRadius: 100,\n        getColour: [255, 0 ,0],\n        getPosition: d => d.position\n      })\n    ];\n\n    return (\n        <DeckGL\n          position='relative'\n          layers={layers}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n        >\n\n        </DeckGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}