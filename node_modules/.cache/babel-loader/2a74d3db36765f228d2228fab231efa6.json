{"ast":null,"code":"var _jsxFileName = \"/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/HomePage/Wave.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { PureComponent, Component, useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport DeckGL from '@deck.gl/react';\nimport { COORDINATE_SYSTEM, OrbitView, LinearInterpolator } from '@deck.gl/core';\nimport { PointCloudLayer, LineLayer } from '@deck.gl/layers';\nimport vertices from './components/cover.json';\nconst INITIAL_VIEW_STATE = {\n  target: [0, 0, 100],\n  rotationX: 10,\n  rotationZ: 0,\n  rotationOrbit: 0,\n  orbitAxis: 'Z',\n  fov: 50,\n  minZoom: 3,\n  maxZoom: 15,\n  zoom: 4\n};\nconst transitionInterpolator = new LinearInterpolator(['rotationOrbit']);\nexport default class Wave extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewState: INITIAL_VIEW_STATE\n    };\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n  }\n\n  _onViewStateChange({\n    viewState\n  }) {\n    this.setState({\n      viewState\n    });\n  }\n\n  render() {\n    const {\n      viewState\n    } = this.state;\n    const layers = [new PointCloudLayer({\n      id: 'wave',\n      data: vertices,\n      onDataLoad: this._onLoad,\n      getPosition: d => d.position,\n      coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n      getColor: [255, 0, 0],\n      opacity: 0.5,\n      pointSize: 5,\n      transitions: {\n        getPosition: {\n          type: 'spring',\n          stiffness: 0.1,\n          damping: 0.15,\n          enter: d => 0\n        }\n      }\n    })];\n    return /*#__PURE__*/React.createElement(DeckGL, {\n      views: new OrbitView(),\n      viewState: viewState,\n      controller: true,\n      onViewStateChange: this._onViewStateChange,\n      layers: layers,\n      parameters: {\n        clearColor: [0, 0, 0, 0]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/HomePage/Wave.js"],"names":["React","PureComponent","Component","useState","useEffect","render","DeckGL","COORDINATE_SYSTEM","OrbitView","LinearInterpolator","PointCloudLayer","LineLayer","vertices","INITIAL_VIEW_STATE","target","rotationX","rotationZ","rotationOrbit","orbitAxis","fov","minZoom","maxZoom","zoom","transitionInterpolator","Wave","constructor","props","state","viewState","_onViewStateChange","bind","setState","layers","id","data","onDataLoad","_onLoad","getPosition","d","position","coordinateSystem","CARTESIAN","getColor","opacity","pointSize","transitions","type","stiffness","damping","enter","clearColor"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,EAAoDC,SAApD,QAAoE,OAApE;AACA,SAASC,MAAT,QAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,iBAAT,EAA4BC,SAA5B,EAAuCC,kBAAvC,QAAgE,eAAhE;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,iBAA3C;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,CADiB;AAEzBC,EAAAA,SAAS,EAAE,EAFc;AAGzBC,EAAAA,SAAS,EAAG,CAHa;AAIzBC,EAAAA,aAAa,EAAE,CAJU;AAKzBC,EAAAA,SAAS,EAAE,GALc;AAMzBC,EAAAA,GAAG,EAAE,EANoB;AAOzBC,EAAAA,OAAO,EAAE,CAPgB;AAQzBC,EAAAA,OAAO,EAAE,EARgB;AASzBC,EAAAA,IAAI,EAAE;AATmB,CAA3B;AAYA,MAAMC,sBAAsB,GAAG,IAAId,kBAAJ,CAAuB,CAAC,eAAD,CAAvB,CAA/B;AAEA,eAAe,MAAMe,IAAN,SAAmBtB,SAAnB,CAA6B;AAC1CuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEf;AADA,KAAb;AAIA,SAAKgB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAAC;AAACD,IAAAA;AAAD,GAAD,EAAc;AAC9B,SAAKG,QAAL,CAAc;AAACH,MAAAA;AAAD,KAAd;AACD;;AAEDvB,EAAAA,MAAM,GAAG;AACP,UAAM;AAACuB,MAAAA;AAAD,QAAc,KAAKD,KAAzB;AAEA,UAAMK,MAAM,GAAG,CACb,IAAItB,eAAJ,CAAoB;AAClBuB,MAAAA,EAAE,EAAE,MADc;AAElBC,MAAAA,IAAI,EAAEtB,QAFY;AAGlBuB,MAAAA,UAAU,EAAE,KAAKC,OAHC;AAIlBC,MAAAA,WAAW,EAAEC,CAAC,IAAIA,CAAC,CAACC,QAJF;AAKlBC,MAAAA,gBAAgB,EAAEjC,iBAAiB,CAACkC,SALlB;AAMlBC,MAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,CANQ;AAOlBC,MAAAA,OAAO,EAAE,GAPS;AAQlBC,MAAAA,SAAS,EAAE,CARO;AASlBC,MAAAA,WAAW,EAAE;AACXR,QAAAA,WAAW,EAAE;AACXS,UAAAA,IAAI,EAAE,QADK;AAEXC,UAAAA,SAAS,EAAE,GAFA;AAGXC,UAAAA,OAAO,EAAE,IAHE;AAIXC,UAAAA,KAAK,EAAEX,CAAC,IAAI;AAJD;AADF;AATK,KAApB,CADa,CAAf;AAqBA,wBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,IAAI9B,SAAJ,EADT;AAEE,MAAA,SAAS,EAAEoB,SAFb;AAGE,MAAA,UAAU,EAAE,IAHd;AAIE,MAAA,iBAAiB,EAAE,KAAKC,kBAJ1B;AAKE,MAAA,MAAM,EAAEG,MALV;AAME,MAAA,UAAU,EAAE;AACVkB,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AADF,OANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;;AApDyC","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { PureComponent, Component, useState, useEffect} from 'react';\nimport { render} from 'react-dom';\nimport DeckGL from '@deck.gl/react';\nimport { COORDINATE_SYSTEM, OrbitView, LinearInterpolator} from '@deck.gl/core';\nimport { PointCloudLayer, LineLayer } from '@deck.gl/layers';\n\nimport vertices from './components/cover.json';\n\nconst INITIAL_VIEW_STATE = {\n  target: [0, 0, 100],\n  rotationX: 10,\n  rotationZ : 0,\n  rotationOrbit: 0,\n  orbitAxis: 'Z',\n  fov: 50,\n  minZoom: 3,\n  maxZoom: 15,\n  zoom: 4\n};\n\nconst transitionInterpolator = new LinearInterpolator(['rotationOrbit']);\n\nexport default class Wave extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: INITIAL_VIEW_STATE,\n    };\n\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n  }\n\n  _onViewStateChange({viewState}) {\n    this.setState({viewState});\n  }\n\n  render() {\n    const {viewState} = this.state;\n\n    const layers = [\n      new PointCloudLayer({\n        id: 'wave',\n        data: vertices,\n        onDataLoad: this._onLoad,\n        getPosition: d => d.position,\n        coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n        getColor: [255, 0, 0],\n        opacity: 0.5,\n        pointSize: 5,\n        transitions: {\n          getPosition: {\n            type: 'spring',\n            stiffness: 0.1,\n            damping: 0.15,\n            enter: d => 0\n          }\n        }\n      })\n    ];\n\n    return (\n      <DeckGL\n        views={new OrbitView()}\n        viewState={viewState}\n        controller={true}\n        onViewStateChange={this._onViewStateChange}\n        layers={layers}\n        parameters={{\n          clearColor: [0, 0, 0, 0]\n        }}\n      >\n      </DeckGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}