{"ast":null,"code":"var _jsxFileName = \"/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FlightFlat.js\";\nimport React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { ArcLayer, ScatterplotLayer } from '@deck.gl/layers';\nimport tokens from '../secret/tokens.json';\nimport airports from './DataViz/Data/airports.json';\nimport routes from './DataViz/Data/routes.json'; // Set your mapbox token here\n\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.5,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n/* eslint-disable react/no-deprecated */\n\nexport default class FlightFlat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewState: INITIAL_VIEW_STATE\n    }; // this._renderTooltip = this._renderTooltip.bind(this);\n  } // _renderTooltip() {\n  //   const {hoveredObject, pointerX, pointerY} = this.state || {};\n  //   return hoveredObject && (\n  //     <div id='mapTooltip' style={{left: pointerX, top: pointerY}}>\n  //       <h3> { hoveredObject.name } </h3>\n  //     </div>\n  //   );\n  // }\n\n\n  render() {\n    const {\n      mapStyle = 'mapbox://styles/mapbox/dark-v9'\n    } = this.props;\n    const layers = [new ScatterplotLayer({\n      id: 'airports',\n      data: airports,\n      pickable: true,\n      opacity: 1,\n      stroked: true,\n      filled: true,\n      radiusScale: 6,\n      getRadius: 3000,\n      getPosition: d => d.position,\n      getFillColor: [113, 200, 235],\n      transitions: {\n        getRadius: {\n          type: 'interpolation',\n          duration: 5000,\n          easing: value => value * 1.1 // grow from size 0\n\n        },\n        getFillColor: {\n          duration: 3000,\n          enter: value => [0, 0, 0]\n        }\n      }\n    }), new ArcLayer({\n      id: 'flights',\n      data: routes,\n      pickable: true,\n      getHeight: () => Math.random() * 0.3 + 0.3,\n      getWidth: 0.2,\n      opacity: 0.7,\n      getSourcePosition: d => d.from,\n      getTargetPosition: d => d.to,\n      getSourceColor: [0, 207, 82],\n      getTargetColor: [0, 198, 144],\n      transitions: {\n        getSourceColor: {\n          duration: 5000,\n          enter: value => [0, 0, 0]\n        },\n        getTargetColor: {\n          duration: 10000,\n          enter: value => [0, 0, 0]\n        }\n      }\n    })];\n    return /*#__PURE__*/React.createElement(DeckGL, {\n      position: \"relative\",\n      layers: layers,\n      initialViewState: INITIAL_VIEW_STATE,\n      controller: true,\n      parameters: {\n        clearColor: [0.04, 0.04, 0.04, 0.1]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \"// \", this._renderTooltip(), /*#__PURE__*/React.createElement(StaticMap, {\n      reuseMaps: true,\n      mapStyle: mapStyle,\n      preventStyleDiffing: true,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FlightFlat.js"],"names":["React","Component","StaticMap","DeckGL","ArcLayer","ScatterplotLayer","tokens","airports","routes","MAPBOX_TOKEN","mapbox","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","FlightFlat","constructor","props","state","viewState","render","mapStyle","layers","id","data","pickable","opacity","stroked","filled","radiusScale","getRadius","getPosition","d","position","getFillColor","transitions","type","duration","easing","value","enter","getHeight","Math","random","getWidth","getSourcePosition","from","getTargetPosition","to","getSourceColor","getTargetColor","clearColor","_renderTooltip"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {StaticMap} from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport {ArcLayer, ScatterplotLayer} from '@deck.gl/layers';\n\nimport tokens from '../secret/tokens.json';\nimport airports from './DataViz/Data/airports.json';\nimport routes from './DataViz/Data/routes.json';\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.5,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 30\n};\n\n/* eslint-disable react/no-deprecated */\nexport default class FlightFlat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: INITIAL_VIEW_STATE\n    };\n\n    // this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  // _renderTooltip() {\n  //   const {hoveredObject, pointerX, pointerY} = this.state || {};\n  //   return hoveredObject && (\n  //     <div id='mapTooltip' style={{left: pointerX, top: pointerY}}>\n  //       <h3> { hoveredObject.name } </h3>\n  //     </div>\n  //   );\n  // }\n\n  render() {\n    const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\n\n    const layers = [\n      new ScatterplotLayer({\n        id: 'airports',\n        data: airports,\n        pickable: true,\n        opacity: 1,\n        stroked: true,\n        filled: true,\n        radiusScale: 6,\n        getRadius: 3000,\n        getPosition: d => d.position,\n        getFillColor: [113, 200, 235],\n        transitions: {\n          getRadius: {\n            type: 'interpolation',\n            duration: 5000,\n            easing: value => value * 1.1 // grow from size 0\n          },\n          getFillColor: {\n            duration: 3000,\n            enter: value => [0, 0, 0]\n          }\n        }\n      }),\n      new ArcLayer({\n        id: 'flights',\n        data: routes,\n        pickable: true,\n        getHeight: () => Math.random() * 0.3 + 0.3,\n        getWidth: 0.2,\n        opacity: 0.7,\n        getSourcePosition: d => d.from,\n        getTargetPosition: d => d.to,\n        getSourceColor: [0, 207, 82],\n        getTargetColor: [0, 198, 144],\n        transitions: {\n          getSourceColor: {\n            duration: 5000,\n            enter: value => [0, 0, 0]\n          },\n          getTargetColor: {\n            duration: 10000,\n            enter: value => [0,0,0]\n          }\n        }\n      })\n    ];\n\n    return (\n        <DeckGL\n          position='relative'\n          layers={layers}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n          parameters={{\n            clearColor: [0.04,0.04,0.04,0.1]\n          }}\n        >\n          // { this._renderTooltip() }\n          <StaticMap\n            reuseMaps\n            mapStyle={mapStyle}\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n\n        </DeckGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}