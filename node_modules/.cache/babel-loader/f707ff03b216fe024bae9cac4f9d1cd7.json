{"ast":null,"code":"var _jsxFileName = \"/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FlightFlat.js\";\nimport React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { ArcLayer, ScatterplotLayer, PointCloudLayer } from '@deck.gl/layers';\nimport { MapView } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\nimport tokens from '../secret/tokens.json';\nimport airports from './DataViz/Data/airports.json';\nimport routes from './DataViz/Data/routes.json'; // Set your mapbox token here\n\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.5,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 15\n};\n\nfunction getSourceColor(d) {\n  const z = d.from[2];\n  const r = z / 1000;\n  return [255 * (1 - r * 2), 128 * r, 255 * r, 255 * (1 - r)];\n}\n\nfunction getTargetColor(d) {\n  const z = d.to[2];\n  ;\n  const r = z / 1000;\n  return [255 * (1 - r * 2), 128 * r, 255 * r, 255 * (1 - r)];\n}\n/* eslint-disable react/no-deprecated */\n\n\nexport default class FlightFlat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewState: INITIAL_VIEW_STATE,\n      hoveredObject: null\n    };\n    this._onHover = this._onHover.bind(this);\n    this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  _onHover({\n    x,\n    y,\n    object\n  }) {\n    this.setState({\n      x,\n      y,\n      hoveredObject: object\n    });\n  }\n\n  _renderTooltip() {\n    const {\n      hoveredObject,\n      x,\n      y\n    } = this.state || {};\n    return hoveredObject && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"mapTooltip\",\n      style: {\n        left: x,\n        top: y\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, \" \", hoveredObject.name, \" \"));\n  }\n\n  render() {\n    const {\n      mapStyle = 'mapbox://styles/mapbox/dark-v9'\n    } = this.props;\n    const layers = [new ScatterplotLayer({\n      id: 'airports',\n      data: airports,\n      pickable: true,\n      opacity: 1,\n      stroked: true,\n      filled: true,\n      radiusScale: 6,\n      getRadius: 3500,\n      getPosition: d => d.position,\n      getFillColor: [113, 200, 235],\n      transitions: {\n        getRadius: {\n          type: 'interpolation',\n          duration: 5000,\n          easing: value => value * 1.1 // grow from size 0\n\n        },\n        getFillColor: {\n          duration: 3000,\n          enter: value => [0, 0, 0]\n        }\n      },\n      onHover: this._onHover\n    }), new ArcLayer({\n      id: 'flights',\n      data: routes,\n      pickable: true,\n      getHeight: () => Math.random() * 0.3 + 0.3,\n      getWidth: 0.2,\n      opacity: 0.2,\n      getSourcePosition: d => d.from,\n      getTargetPosition: d => d.to,\n      getSourceColor: getSourceColor,\n      getTargetColor: getTargetColor,\n      transitions: {\n        getSourceColor: {\n          duration: 5000,\n          enter: value => [0, 0, 0]\n        },\n        getTargetColor: {\n          duration: 10000,\n          enter: value => [0, 0, 0]\n        }\n      }\n    })];\n    return /*#__PURE__*/React.createElement(DeckGL, {\n      views: new MapView({\n        repeat: false\n      }),\n      position: \"relative\",\n      layers: layers,\n      initialViewState: INITIAL_VIEW_STATE,\n      controller: true,\n      parameters: {\n        blendFunc: [GL.SRC_ALPHA, GL.ONE, GL.ONE_MINUS_DST_ALPHA, GL.ONE],\n        blendEquation: GL.FUNC_ADD\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, this._renderTooltip(), /*#__PURE__*/React.createElement(StaticMap, {\n      reuseMaps: true,\n      mapStyle: mapStyle,\n      preventStyleDiffing: true,\n      mapboxApiAccessToken: MAPBOX_TOKEN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/tbptbp/Desktop/Workspace/Website/hoangvu/src/Projects/FlightFlat.js"],"names":["React","Component","StaticMap","DeckGL","ArcLayer","ScatterplotLayer","PointCloudLayer","MapView","GL","tokens","airports","routes","MAPBOX_TOKEN","mapbox","INITIAL_VIEW_STATE","longitude","latitude","zoom","maxZoom","pitch","bearing","getSourceColor","d","z","from","r","getTargetColor","to","FlightFlat","constructor","props","state","viewState","hoveredObject","_onHover","bind","_renderTooltip","x","y","object","setState","left","top","name","render","mapStyle","layers","id","data","pickable","opacity","stroked","filled","radiusScale","getRadius","getPosition","position","getFillColor","transitions","type","duration","easing","value","enter","onHover","getHeight","Math","random","getWidth","getSourcePosition","getTargetPosition","repeat","blendFunc","SRC_ALPHA","ONE","ONE_MINUS_DST_ALPHA","blendEquation","FUNC_ADD"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StaticMap } from 'react-map-gl';\nimport DeckGL from '@deck.gl/react';\nimport { ArcLayer, ScatterplotLayer, PointCloudLayer } from '@deck.gl/layers';\nimport { MapView } from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\n\nimport tokens from '../secret/tokens.json';\nimport airports from './DataViz/Data/airports.json';\nimport routes from './DataViz/Data/routes.json';\n\n// Set your mapbox token here\nconst MAPBOX_TOKEN = tokens.mapbox; // eslint-disable-line\n\nconst INITIAL_VIEW_STATE = {\n  longitude: 0,\n  latitude: 30,\n  zoom: 1.5,\n  maxZoom: 15,\n  pitch: 30,\n  bearing: 15\n};\n\nfunction getSourceColor(d) {\n  const z = d.from[2];\n  const r = z / 1000;\n\n  return [255 * (1 - r * 2), 128 * r, 255 * r, 255 * (1 - r)];\n}\n\n\nfunction getTargetColor(d) {\n  const z = d.to[2];;\n  const r = z / 1000;\n\n  return [255 * (1 - r * 2), 128 * r, 255 * r, 255 * (1 - r)];\n}\n\n/* eslint-disable react/no-deprecated */\nexport default class FlightFlat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      viewState: INITIAL_VIEW_STATE,\n      hoveredObject: null\n    };\n\n    this._onHover = this._onHover.bind(this);\n    this._renderTooltip = this._renderTooltip.bind(this);\n  }\n\n  _onHover({x, y, object}) {\n    this.setState({x, y, hoveredObject: object});\n  }\n\n  _renderTooltip() {\n    const {hoveredObject, x, y} = this.state || {};\n    return hoveredObject && (\n      <div id='mapTooltip' style={{left: x, top: y}}>\n        <h4> { hoveredObject.name } </h4>\n      </div>\n    );\n  }\n\n  render() {\n    const {mapStyle = 'mapbox://styles/mapbox/dark-v9'} = this.props;\n\n    const layers = [\n      new ScatterplotLayer({\n        id: 'airports',\n        data: airports,\n        pickable: true,\n        opacity: 1,\n        stroked: true,\n        filled: true,\n        radiusScale: 6,\n        getRadius: 3500,\n        getPosition: d => d.position,\n        getFillColor: [113, 200, 235],\n        transitions: {\n          getRadius: {\n            type: 'interpolation',\n            duration: 5000,\n            easing: value => value * 1.1 // grow from size 0\n          },\n          getFillColor: {\n            duration: 3000,\n            enter: value => [0, 0, 0]\n          }\n        },\n        onHover: this._onHover\n      }),\n      new ArcLayer({\n        id: 'flights',\n        data: routes,\n        pickable: true,\n        getHeight: () => Math.random() * 0.3 + 0.3,\n        getWidth: 0.2,\n        opacity: 0.2,\n        getSourcePosition: d => d.from,\n        getTargetPosition: d => d.to,\n        getSourceColor: getSourceColor,\n        getTargetColor: getTargetColor,\n        transitions: {\n          getSourceColor: {\n            duration: 5000,\n            enter: value => [0, 0, 0]\n          },\n          getTargetColor: {\n            duration: 10000,\n            enter: value => [0,0,0]\n          }\n        }\n      })\n    ];\n\n    return (\n        <DeckGL\n          views={new MapView({repeat: false})}\n          position='relative'\n          layers={layers}\n          initialViewState={INITIAL_VIEW_STATE}\n          controller={true}\n          parameters={{\n            blendFunc: [GL.SRC_ALPHA, GL.ONE, GL.ONE_MINUS_DST_ALPHA, GL.ONE],\n            blendEquation: GL.FUNC_ADD\n          }}\n        >\n          { this._renderTooltip() }\n          <StaticMap\n            reuseMaps\n            mapStyle={mapStyle}\n            preventStyleDiffing={true}\n            mapboxApiAccessToken={MAPBOX_TOKEN}\n          />\n\n        </DeckGL>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}