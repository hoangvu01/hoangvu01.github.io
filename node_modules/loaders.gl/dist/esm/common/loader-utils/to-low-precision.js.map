{"version":3,"sources":["../../../../src/common/loader-utils/to-low-precision.js"],"names":["toLowPrecision","input","precision","Number","toPrecision","Array","isArray","ArrayBuffer","isView","from","map","item","key"],"mappings":";;AAAA;;;;;;;AAOA,OAAO,SAASA,cAAT,CAAwBC,KAAxB,EAA+C;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;;AACpD;AACA,MAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,IAAAA,KAAK,GAAGE,MAAM,CAACF,KAAK,CAACG,WAAN,CAAkBF,SAAlB,CAAD,CAAd;AACD,GAFD,MAEO,IAAIG,KAAK,CAACC,OAAN,CAAcL,KAAd,KAAwBM,WAAW,CAACC,MAAZ,CAAmBP,KAAnB,CAA5B,EAAuD;AAC5DA,IAAAA,KAAK,GAAGI,KAAK,CAACI,IAAN,CAAWR,KAAX,EAAkBS,GAAlB,CAAsB,UAAAC,IAAI;AAAA,aAAIX,cAAc,CAACW,IAAD,EAAOT,SAAP,CAAlB;AAAA,KAA1B,CAAR;AACD,GAFM,MAEA,IAAI,QAAOD,KAAP,MAAiB,QAArB,EAA+B;AACpC,SAAK,IAAMW,GAAX,IAAkBX,KAAlB,EAAyB;AACvBA,MAAAA,KAAK,CAACW,GAAD,CAAL,GAAaZ,cAAc,CAACC,KAAK,CAACW,GAAD,CAAN,EAAaV,SAAb,CAA3B;AACD;AACF;;AACD,SAAOD,KAAP;AACD","sourcesContent":["/**\n * Covert all numbers in a deep structure to a given precision, allowing\n * reliable float comparisons. Converts data in-place.\n * @param  {mixed} input      Input data\n * @param  {Number} [precision] Desired precision\n * @return {mixed}            Input data, with all numbers converted\n */\nexport function toLowPrecision(input, precision = 11) {\n  /* eslint-disable guard-for-in */\n  if (typeof input === 'number') {\n    input = Number(input.toPrecision(precision));\n  } else if (Array.isArray(input) || ArrayBuffer.isView(input)) {\n    input = Array.from(input).map(item => toLowPrecision(item, precision));\n  } else if (typeof input === 'object') {\n    for (const key in input) {\n      input[key] = toLowPrecision(input[key], precision);\n    }\n  }\n  return input;\n}\n"],"file":"to-low-precision.js"}