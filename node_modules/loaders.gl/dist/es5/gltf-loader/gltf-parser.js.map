{"version":3,"sources":["../../../src/gltf-loader/gltf-parser.js"],"names":["GLTFParser","gltf","log","console","out","options","images","map","image","parseImage","filter","Boolean","scenes","scene","config","createImage","mesh","primitives","primitive","parseMeshPrimitive","length","createGroup","attributes","mapAttributes","accessor","createBuffer","index","_get","array","object","warn","bufferViews","forEach","bufView","i","resolveBufferView","resolveImage","samplers","sampler","resolveSampler","textures","texture","resolveTexture","accessors","resolveAccessor","materials","material","resolveMaterial","meshes","resolveMesh","nodes","node","resolveNode","skins","skin","resolveSkin","resolveScene","id","getNode","children","child","getMesh","camera","getCamera","getSkin","inverseBindMatrices","getAccessor","attribute","indices","getMaterial","normalTexture","getTexture","occlusionTexture","emissiveTexture","pbrMetallicRoughness","mr","baseColorTexture","metallicRoughnessTexture","bufferView","getBufferView","bytesPerComponent","enumAccessorBytes","components","enumAccessorType","bytesPerElement","getSampler","source","getImage","parameters","key","glEnum","enumSamplerParameter","buffer","getBuffer","perspective","matrix","createPerspectiveMatrix","orthographic","createOrthographicMatrix","componentType","BYTES","type","COMPONENTS","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","parameter","GL_TEXTURE_MAG_FILTER","GL_TEXTURE_MIN_FILTER","GL_TEXTURE_WRAP_S","GL_TEXTURE_WRAP_T","PARAMETER_MAP","magFilter","minFilter","wrapS","wrapT"],"mappings":"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","sourcesContent":["export default class GLTFParser {\n  constructor(gltf) {\n    this.gltf = gltf;\n    this.log = console; // eslint-disable-line\n    this.out = {};\n  }\n\n  parse(options = {}) {\n    // Load all images\n    this.out.images = (this.gltf.images || [])\n      .map(image => this.parseImage(image))\n      .filter(Boolean);\n\n    // Parse all scenes\n    this.out.scenes = (this.gltf.scenes || [])\n      .map(scene => this.parseImage(scene))\n      .filter(Boolean);\n\n    if (this.gltf.scene) {\n      this.out.scene = this.gltf.scenes[this.gltf.scene];\n    }\n  }\n\n  parseScene() {\n\n  }\n\n  parseImage(image) {\n    return this.config.createImage(image);\n  }\n\n  parseMesh(mesh) {\n    // Each primitive is intended to correspond to a draw call\n    const primitives = (mesh.primitives || []).map(primitive => this.parseMeshPrimitive(primitive));\n\n    return primitives.length === 1 ? primitives[0] : this.config.createGroup(primitives);\n  }\n\n  parseMeshPrimitive(primitive) {\n    // if (!primitive.attributes)\n    //   this.log.warn(primitive without attributes`)\n    let attributes = primitive.attributes || {};\n    attributes = this.config.mapAttributes(attributes);\n    return attributes;\n  }\n\n  parseAccessor(accessor) {\n    return this.config.createBuffer(accessor);\n  }\n\n  // ACCESSORS\n\n  getScene(index) {\n    return this._get('scenes', index);\n  }\n\n  getNode(index) {\n    return this._get('nodes', index);\n  }\n\n  getSkin(index) {\n    return this._get('skins', index);\n  }\n\n  getMesh(index) {\n    return this._get('meshes', index);\n  }\n\n  getMaterial(index) {\n    return this._get('materials', index);\n  }\n\n  getAccessor(index) {\n    return this._get('accessors', index);\n  }\n\n  getTexture(index) {\n    return this._get('textures', index);\n  }\n\n  getSampler(index) {\n    return this._get('samplers', index);\n  }\n\n  getImage(index) {\n    return this._get('images', index);\n  }\n\n  getBufferView(index) {\n    return this._get('bufferViews', index);\n  }\n\n  getBuffer(index) {\n    return this._get('buffers', index);\n  }\n\n  _get(array, index) {\n    const object = this.gltf[array] && this.gltf[array][index];\n    if (!object) {\n      console.warn(`glTF file error: Could not resolve ${array}[${index}]`); // eslint-disable-line\n    }\n    return object;\n  }\n\n  // PREPARATION STEP: CROSS-LINK INDEX RESOLUTION, ENUM LOOKUP, CONVENIENCE CALCULATIONS\n\n  /* eslint-disable complexity */\n  resolve(options = {}) {\n    const {gltf} = this;\n\n    (gltf.bufferViews || []).forEach((bufView, i) => this.resolveBufferView(bufView, i));\n\n    (gltf.images || []).forEach((image, i) => this.resolveImage(image, i));\n    (gltf.samplers || []).forEach((sampler, i) => this.resolveSampler(sampler, i));\n    (gltf.textures || []).forEach((texture, i) => this.resolveTexture(texture, i));\n\n    (gltf.accessors || []).forEach((accessor, i) => this.resolveAccessor(accessor, i));\n    (gltf.materials || []).forEach((material, i) => this.resolveMaterial(material, i));\n    (gltf.meshes || []).forEach((mesh, i) => this.resolveMesh(mesh, i));\n\n    (gltf.nodes || []).forEach((node, i) => this.resolveNode(node, i));\n\n    (gltf.skins || []).forEach((skin, i) => this.resolveSkin(skin, i));\n\n    (gltf.scenes || []).forEach((scene, i) => this.resolveScene(scene, i));\n\n    if (gltf.scene) {\n      gltf.scene = gltf.scenes[this.gltf.scene];\n    }\n\n    return gltf;\n  }\n  /* eslint-enable complexity */\n\n  resolveScene(scene, index) {\n    scene.id = `scene-${index}`;\n    scene.nodes = (scene.nodes || []).map(node => this.getNode(node));\n  }\n\n  resolveNode(node, index) {\n    node.id = `node-${index}`;\n    node.children = (node.children || []).map(child => this.getNode(child));\n    if (node.mesh) {\n      node.mesh = this.getMesh(node.mesh);\n    }\n    if (node.camera) {\n      node.camera = this.getCamera(node.camera);\n    }\n    if (node.skin) {\n      node.skin = this.getSkin(node.skin);\n    }\n  }\n\n  resolveSkin(skin, index) {\n    skin.id = `skin-${index}`;\n    skin.inverseBindMatrices = this.getAccessor(skin.inverseBindMatrices);\n  }\n\n  resolveMesh(mesh, index) {\n    mesh.id = `mesh-${index}`;\n    for (const primitive of mesh.primitives) {\n      for (const attribute in primitive.attributes) {\n        primitive.attributes[attribute] = this.getAccessor(primitive.attributes[attribute]);\n      }\n      if (primitive.indices) {\n        primitive.indices = this.getAccessor(primitive.indices);\n      }\n      if (primitive.material) {\n        primitive.material = this.getMaterial(primitive.material);\n      }\n    }\n  }\n\n  resolveMaterial(material, index) {\n    material.id = `material-${index}`;\n    if (material.normalTexture) {\n      this.normalTexture = this.getTexture(material.normalTexture);\n    }\n    if (material.occlusionTexture) {\n      this.occlusionTexture = this.getTexture(material.occlusionTexture);\n    }\n    if (material.emissiveTexture) {\n      this.emissiveTexture = this.getTexture(material.emissiveTexture);\n    }\n\n    if (material.pbrMetallicRoughness) {\n      const mr = material.pbrMetallicRoughness;\n      if (mr.baseColorTexture) {\n        mr.baseColorTexture = this.getTexture(mr.baseColorTexture);\n      }\n      if (mr.metallicRoughnessTexture) {\n        mr.metallicRoughnessTexture = this.getTexture(mr.metallicRoughnessTexture);\n      }\n    }\n  }\n\n  resolveAccessor(accessor, index) {\n    accessor.id = `accessor-${index}`;\n    accessor.bufferView = this.getBufferView(accessor.bufferView);\n\n    // Look up enums\n    accessor.bytesPerComponent = this.enumAccessorBytes(accessor);\n    accessor.components = this.enumAccessorType(accessor);\n    accessor.bytesPerElement = accessor.bytesPerComponent * accessor.components;\n  }\n\n  resolveTexture(texture, index) {\n    texture.id = `texture-${index}`;\n    texture.sampler = this.getSampler(texture.sampler);\n    texture.source = this.getImage(texture.source);\n  }\n\n  resolveSampler(sampler, index) {\n    sampler.id = `sampler-${index}`;\n    // Map textual parameters to GL parameter values\n    this.parameters = {};\n    for (const key in sampler) {\n      const glEnum = this.enumSamplerParameter(sampler[key]);\n      this.parameters[glEnum] = sampler[key];\n    }\n  }\n\n  resolveImage(image, index) {\n    image.id = `image-${index}`;\n    if (image.bufferView) {\n      image.bufferView = this.getBufferView(image.bufferView);\n    }\n    // TODO - Handle URIs etc\n  }\n\n  resolveBufferView(bufferView, index) {\n    bufferView.id = `bufferView-${index}`;\n    bufferView.buffer = this.getBuffer(bufferView.buffer);\n  }\n\n  // PREPROC\n\n  resolveCamera(camera) {\n    // TODO - resolve step should not create\n    if (camera.perspective) {\n      camera.matrix = this.config.createPerspectiveMatrix(camera.perspective);\n    }\n    if (camera.orthographic) {\n      camera.matrix = this.config.createOrthographicMatrix(camera.orthographic);\n    }\n  }\n\n  // ENUM LOOKUP\n\n  enumAccessorBytes(componentType) {\n    const BYTES = {\n      5120: 1, // BYTE\n      5121: 1, // UNSIGNED_BYTE\n      5122: 2, // SHORT\n      5123: 2, // UNSIGNED_SHORT\n      5125: 4, // UNSIGNED_INT\n      5126: 4  // FLOAT\n    };\n    return BYTES[componentType];\n  }\n\n  enumAccessorType(type) {\n    const COMPONENTS = {\n      SCALAR: 1,\n      VEC2: 2,\n      VEC3: 3,\n      VEC4: 4,\n      MAT2: 4,\n      MAT3: 9,\n      MAT4: 16\n    };\n    return COMPONENTS[type];\n  }\n\n  enumSamplerParameter(parameter) {\n    const GL_TEXTURE_MAG_FILTER = 0x2800;\n    const GL_TEXTURE_MIN_FILTER = 0x2801;\n    const GL_TEXTURE_WRAP_S = 0x2802;\n    const GL_TEXTURE_WRAP_T = 0x2803;\n\n    const PARAMETER_MAP = {\n      magFilter: GL_TEXTURE_MAG_FILTER,\n      minFilter: GL_TEXTURE_MIN_FILTER,\n      wrapS: GL_TEXTURE_WRAP_S,\n      wrapT: GL_TEXTURE_WRAP_T\n    };\n\n    return PARAMETER_MAP[parameter];\n  }\n}\n"],"file":"gltf-parser.js"}