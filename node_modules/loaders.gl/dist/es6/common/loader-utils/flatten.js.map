{"version":3,"sources":["../../../../src/common/loader-utils/flatten.js"],"names":["flatten","array","filter","map","x","result","Array","isArray","flattenArray","index","length","value","push","countVertices","nestedArray","dimensions","nestedCount","localCount","ArrayBuffer","isView","flattenVertices","vertexLength","flattenToTypedArray","ArrayType","Float32Array","checkVertices","count","typedArray","flattenVerticesInPlace","predicate","Number","isFinite","flattenVerticesInPlaceRecursive","insert"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AAYA,OAAO,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAACC,EAAAA,MAAM,GAAG,MAAM,IAAhB;AAAsBC,EAAAA,GAAG,GAAGC,CAAC,IAAIA,CAAjC;AAAoCC,EAAAA,MAAM,GAAG;AAA7C,IAAmD,EAA3E,EAA+E;AACpF;AACA,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAL,EAA2B;AACzB,WAAOC,MAAM,CAACD,KAAD,CAAN,GAAgB,CAACE,GAAG,CAACF,KAAD,CAAJ,CAAhB,GAA+B,EAAtC;AACD,GAJmF,CAKpF;;;AACA,SAAOO,YAAY,CAACP,KAAD,EAAQC,MAAR,EAAgBC,GAAhB,EAAqBE,MAArB,CAAnB;AACD,C,CAED;;AACA,SAASG,YAAT,CAAsBP,KAAtB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CE,MAA1C,EAAkD;AAChD,MAAII,KAAK,GAAG,CAAC,CAAb;;AACA,SAAO,EAAEA,KAAF,GAAUR,KAAK,CAACS,MAAvB,EAA+B;AAC7B,UAAMC,KAAK,GAAGV,KAAK,CAACQ,KAAD,CAAnB;;AACA,QAAIH,KAAK,CAACC,OAAN,CAAcI,KAAd,CAAJ,EAA0B;AACxBH,MAAAA,YAAY,CAACG,KAAD,EAAQT,MAAR,EAAgBC,GAAhB,EAAqBE,MAArB,CAAZ;AACD,KAFD,MAEO,IAAIH,MAAM,CAACS,KAAD,CAAV,EAAmB;AACxBN,MAAAA,MAAM,CAACO,IAAP,CAAYT,GAAG,CAACQ,KAAD,CAAf;AACD;AACF;;AACD,SAAON,MAAP;AACD;;AAED,OAAO,SAASQ,aAAT,CAAuBC,WAAvB,EAAoCC,UAAU,GAAG,CAAjD,EAAoD;AACzD,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIR,KAAK,GAAG,CAAC,CAAb;;AACA,SAAO,EAAEA,KAAF,GAAUK,WAAW,CAACJ,MAA7B,EAAqC;AACnC,UAAMC,KAAK,GAAGG,WAAW,CAACL,KAAD,CAAzB;;AACA,QAAIH,KAAK,CAACC,OAAN,CAAcI,KAAd,KAAwBO,WAAW,CAACC,MAAZ,CAAmBR,KAAnB,CAA5B,EAAuD;AACrDK,MAAAA,WAAW,IAAIH,aAAa,CAACF,KAAD,CAA5B;AACD,KAFD,MAEO;AACLM,MAAAA,UAAU;AACX;AACF;;AACD,SAAOD,WAAW,IAAIA,WAAW,KAAK,CAAhB,IAAqBC,UAAU,GAAGF,UAAlC,GAA+CA,UAA/C,GAA4DE,UAAhE,CAAlB;AACD,C,CAED;;AACA,OAAO,SAASG,eAAT,CAAyBN,WAAzB,EAAsC;AAACT,EAAAA,MAAM,GAAG,EAAV;AAAcU,EAAAA,UAAU,GAAG;AAA3B,IAAgC,EAAtE,EAA0E;AAC/E,MAAIN,KAAK,GAAG,CAAC,CAAb;AACA,MAAIY,YAAY,GAAG,CAAnB;;AACA,SAAO,EAAEZ,KAAF,GAAUK,WAAW,CAACJ,MAA7B,EAAqC;AACnC,UAAMC,KAAK,GAAGG,WAAW,CAACL,KAAD,CAAzB;;AACA,QAAIH,KAAK,CAACC,OAAN,CAAcI,KAAd,KAAwBO,WAAW,CAACC,MAAZ,CAAmBR,KAAnB,CAA5B,EAAuD;AACrDS,MAAAA,eAAe,CAACT,KAAD,EAAQ;AAACN,QAAAA,MAAD;AAASU,QAAAA;AAAT,OAAR,CAAf;AACD,KAFD,MAEO;AACL;AACA,UAAIM,YAAY,GAAGN,UAAnB,EAA+B;AAC7BV,QAAAA,MAAM,CAACO,IAAP,CAAYD,KAAZ;AACAU,QAAAA,YAAY;AACb;AACF;AACF,GAd8E,CAe/E;;;AACA,MAAIA,YAAY,GAAG,CAAf,IAAoBA,YAAY,GAAGN,UAAvC,EAAmD;AACjDV,IAAAA,MAAM,CAACO,IAAP,CAAY,CAAZ;AACD;;AACD,SAAOP,MAAP;AACD;AAED,OAAO,SAASiB,mBAAT,CAA6BR,WAA7B,EAA0CS,SAAS,GAAGC,YAAtD,EAAoE;AACzE,MAAIV,WAAW,CAACJ,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,WAAO,IAAIc,YAAJ,CAAiB,CAAjB,CAAP;AACD;;AAED,MAAI,CAACC,aAAa,CAACX,WAAD,CAAlB,EAAiC;AAC/B,WAAO,IAAP;AACD;;AAED,QAAMY,KAAK,GAAGb,aAAa,CAACC,WAAD,CAA3B;AAEA,QAAMa,UAAU,GAAG,IAAIJ,SAAJ,CAAcG,KAAd,CAAnB;AACAE,EAAAA,sBAAsB,CAACd,WAAD,EAAca,UAAd,CAAtB;AACA,SAAOA,UAAP;AACD;;AAED,SAASF,aAAT,CAAuBX,WAAvB,EAAoCe,SAAS,GAAGC,MAAM,CAACC,QAAvD,EAAiE;AAC/D,MAAItB,KAAK,GAAG,CAAC,CAAb;;AACA,SAAO,EAAEA,KAAF,GAAUK,WAAW,CAACJ,MAA7B,EAAqC;AACnC,UAAMC,KAAK,GAAGG,WAAW,CAACL,KAAD,CAAzB;;AACA,QAAIH,KAAK,CAACC,OAAN,CAAcI,KAAd,KAAwBO,WAAW,CAACC,MAAZ,CAAmBR,KAAnB,CAA5B,EAAuD;AACrD,UAAI,CAACc,aAAa,CAACd,KAAD,EAAQkB,SAAR,CAAlB,EAAsC;AACpC,eAAO,KAAP;AACD;AACF,KAJD,MAIO,IAAI,CAACA,SAAS,CAAClB,KAAD,CAAd,EAAuB;AAC5B,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASiB,sBAAT,CAAgCd,WAAhC,EAA6CT,MAA7C,EAAqDU,UAAU,GAAG,CAAlE,EAAqE;AACnEiB,EAAAA,+BAA+B,CAAClB,WAAD,EAAcT,MAAd,EAAsBU,UAAtB,EAAkC,CAAlC,CAA/B;AACA,SAAOV,MAAP;AACD,C,CAED;;;AACA,SAAS2B,+BAAT,CAAyClB,WAAzC,EAAsDT,MAAtD,EAA8DU,UAA9D,EAA0EkB,MAA1E,EAAkF;AAChF,MAAIxB,KAAK,GAAG,CAAC,CAAb;AACA,MAAIY,YAAY,GAAG,CAAnB;;AACA,SAAO,EAAEZ,KAAF,GAAUK,WAAW,CAACJ,MAA7B,EAAqC;AACnC,UAAMC,KAAK,GAAGG,WAAW,CAACL,KAAD,CAAzB;;AACA,QAAIH,KAAK,CAACC,OAAN,CAAcI,KAAd,KAAwBO,WAAW,CAACC,MAAZ,CAAmBR,KAAnB,CAA5B,EAAuD;AACrDsB,MAAAA,MAAM,GAAGD,+BAA+B,CAACrB,KAAD,EAAQN,MAAR,EAAgBU,UAAhB,EAA4BkB,MAA5B,CAAxC;AACD,KAFD,MAEO;AACL;AACA,UAAIZ,YAAY,GAAGN,UAAnB,EAA+B;AAC7BV,QAAAA,MAAM,CAAC4B,MAAM,EAAP,CAAN,GAAmBtB,KAAnB;AACAU,QAAAA,YAAY;AACb;AACF;AACF,GAd+E,CAehF;;;AACA,MAAIA,YAAY,GAAG,CAAf,IAAoBA,YAAY,GAAGN,UAAvC,EAAmD;AACjDV,IAAAA,MAAM,CAAC4B,MAAM,EAAP,CAAN,GAAmB,CAAnB;AACD;;AACD,SAAOA,MAAP;AACD","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/**\n * Flattens a nested array into a single level array,\n * or a single value into an array with one value\n * @example flatten([[1, [2]], [3], 4]) => [1, 2, 3, 4]\n * @example flatten(1) => [1]\n * @param {Array} array The array to flatten.\n * @param {Function} filter= - Optional predicate called on each `value` to\n *   determine if it should be included (pushed onto) the resulting array.\n * @param {Function} map= - Optional transform applied to each array elements.\n * @param {Array} result=[] - Optional array to push value into\n * @return {Array} Returns the new flattened array (new array or `result` if provided)\n */\nexport function flatten(array, {filter = () => true, map = x => x, result = []} = {}) {\n  // Wrap single object in array\n  if (!Array.isArray(array)) {\n    return filter(array) ? [map(array)] : [];\n  }\n  // Deep flatten and filter the array\n  return flattenArray(array, filter, map, result);\n}\n\n// Deep flattens an array. Helper to `flatten`, see its parameters\nfunction flattenArray(array, filter, map, result) {\n  let index = -1;\n  while (++index < array.length) {\n    const value = array[index];\n    if (Array.isArray(value)) {\n      flattenArray(value, filter, map, result);\n    } else if (filter(value)) {\n      result.push(map(value));\n    }\n  }\n  return result;\n}\n\nexport function countVertices(nestedArray, dimensions = 3) {\n  let nestedCount = 0;\n  let localCount = 0;\n  let index = -1;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      nestedCount += countVertices(value);\n    } else {\n      localCount++;\n    }\n  }\n  return nestedCount + (nestedCount === 0 && localCount < dimensions ? dimensions : localCount);\n}\n\n// Flattens nested array of vertices, padding third coordinate as needed\nexport function flattenVertices(nestedArray, {result = [], dimensions = 3} = {}) {\n  let index = -1;\n  let vertexLength = 0;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      flattenVertices(value, {result, dimensions});\n    } else {\n      // eslint-disable-next-line\n      if (vertexLength < dimensions) {\n        result.push(value);\n        vertexLength++;\n      }\n    }\n  }\n  // Add a third coordinate if needed\n  if (vertexLength > 0 && vertexLength < dimensions) {\n    result.push(0);\n  }\n  return result;\n}\n\nexport function flattenToTypedArray(nestedArray, ArrayType = Float32Array) {\n  if (nestedArray.length === 0) {\n    return new Float32Array(0);\n  }\n\n  if (!checkVertices(nestedArray)) {\n    return null;\n  }\n\n  const count = countVertices(nestedArray);\n\n  const typedArray = new ArrayType(count);\n  flattenVerticesInPlace(nestedArray, typedArray);\n  return typedArray;\n}\n\nfunction checkVertices(nestedArray, predicate = Number.isFinite) {\n  let index = -1;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      if (!checkVertices(value, predicate)) {\n        return false;\n      }\n    } else if (!predicate(value)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction flattenVerticesInPlace(nestedArray, result, dimensions = 3) {\n  flattenVerticesInPlaceRecursive(nestedArray, result, dimensions, 0);\n  return result;\n}\n\n// Flattens nested array of vertices, padding third coordinate as needed\nfunction flattenVerticesInPlaceRecursive(nestedArray, result, dimensions, insert) {\n  let index = -1;\n  let vertexLength = 0;\n  while (++index < nestedArray.length) {\n    const value = nestedArray[index];\n    if (Array.isArray(value) || ArrayBuffer.isView(value)) {\n      insert = flattenVerticesInPlaceRecursive(value, result, dimensions, insert);\n    } else {\n      // eslint-disable-next-line\n      if (vertexLength < dimensions) {\n        result[insert++] = value;\n        vertexLength++;\n      }\n    }\n  }\n  // Add a third coordinate if needed\n  if (vertexLength > 0 && vertexLength < dimensions) {\n    result[insert++] = 0;\n  }\n  return insert;\n}\n"],"file":"flatten.js"}