{"version":3,"sources":["../../../src/kml-loader/kml-parser.js"],"names":["KMLParser","constructor","xml","kml","parse","documents","_filter","ParseDomDocuments","folders","ParseDomFolders","markers","ParseDomMarkers","polygons","ParseDomPolygons","lines","ParseDomLines","overlays","ParseDomGroundOverlays","links","ParseDomLinks","parseDocuments","callback","documentData","forEach","p","i","parseFolders","folderData","parseMarkers","markerData","parsePolygons","polygonData","parseLines","lineData","parseGroundOverlays","overlayData","o","parseNetworklinks","linkData","a","filtered","_filters","length","item","bool","f","push","addFilter","filter","xmlDom","docs","docsDomNodes","getElementsByTagName","node","docsData","Object","assign","ParseDomDoc","ParseNonSpatialDomData","transform","options","folderDomNodes","ParseDomItems","type","ParseDomFolder","linkDomNodes","ParseDomLink","urls","link","url","Value","lineDomNodes","lineColor","lineWidth","polyColor","coordinates","ParseDomCoordinates","ResolveDomStyle","ParseDomStyle","rgb","convertKMLColorToRGB","lineOpacity","opacity","color","icon","ParseDomIcon","bounds","ParseDomBounds","polygonDomNodes","fill","lineRGB","polyRGB","polyOpacity","markerDomNodes","coords","marker","charAt","coordNodes","console","warn","s","trim","coordStrings","split","values","coord","c","norths","souths","easts","wests","north","south","east","west","parseFloat","config","maxOffset","data","name","description","tags","names","WithinOffsetDom","descriptions","hasAttribute","id","parseInt","getAttribute","extendedDatas","j","childNodes","t","ParseTag","value","nodeName","parent","child","max","current","parentNode","error","childNode","defaultStyle","styles","style","defaultIcon","defaultScale","icons","scale","hrefNode","scales","scaleNode","substring","lineStyles","polyStyles","iconStyles","lineStyle","colors","widths","width","polyStyle","outlines","outline","Boolean","iconStyle","tag","tagName","items","colorString","colorStr","replace","rgbVal","RGBColorToKML","opacityNum","opacityStr","toString","kmlStr","nodeValue","str","ChildNodesArray","e","array"],"mappings":"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","sourcesContent":["/**\n * Author - Nick Blackwell\n * License - MIT\n * Description - Defines a class, KMLParser which is a container for\n * static kml parsing methods.\n */\n\n/**\n * KMLParser Class parses standard kml documents and returns objects\n * representiong it's data.\n * the optional transformations define the data within these objects,\n * ie, documentTransform (for Geolive)\n * will create a Layer object from its contents, and pull out the items\n * which will be transformed aswell as MapItems.\n */\n\n/* global console */\n/* eslint-disable no-console */\n\nexport default class KMLParser {\n\n  constructor(xml) {\n    this.kml = xml;\n  }\n\n  parse() {\n    return {\n      documents: this._filter(KMLParser.ParseDomDocuments(this.kml)),\n      folders: this._filter(KMLParser.ParseDomFolders(this.kml)),\n      markers: this._filter(KMLParser.ParseDomMarkers(this.kml)),\n      polygons: this._filter(KMLParser.ParseDomPolygons(this.kml)),\n      lines: this._filter(KMLParser.ParseDomLines(this.kml)),\n      overlays: this._filter(KMLParser.ParseDomGroundOverlays(this.kml)),\n      links: this._filter(KMLParser.ParseDomLinks(this.kml))\n    };\n  }\n\n  parseDocuments(callback) {\n    const documentData = this._filter(KMLParser.ParseDomDocuments(this.kml));\n    documentData.forEach((p, i) => callback(p, this.kml, documentData, i));\n    return this;\n  }\n\n  parseFolders(callback) {\n    const folderData = this._filter(KMLParser.ParseDomFolders(this.kml));\n    folderData.forEach((p, i) => callback(p, this.kml, folderData, i));\n    return this;\n  }\n\n  parseMarkers(callback) {\n    const markerData = this._filter(KMLParser.ParseDomMarkers(this.kml));\n    markerData.forEach((p, i) => callback(p, this.kml, markerData, i));\n    return this;\n  }\n\n  parsePolygons(callback) {\n    const polygonData = this._filter(KMLParser.ParseDomPolygons(this.kml));\n    polygonData.forEach((p, i) => callback(p, this.kml, polygonData, i));\n    return this;\n  }\n\n  parseLines(callback) {\n    const lineData = this._filter(KMLParser.ParseDomLines(this.kml));\n    lineData.forEach((p, i) => callback(p, this.kml, lineData, i));\n    return this;\n  }\n\n  parseGroundOverlays(callback) {\n    const overlayData = this._filter(KMLParser.ParseDomGroundOverlays(this.kml));\n    overlayData.forEach((o, i) => callback(o, this.kml, overlayData, i));\n    return this;\n  }\n\n  parseNetworklinks(callback) {\n    const linkData = this._filter(KMLParser.ParseDomLinks(this.kml));\n    linkData.forEach((p, i) => callback(p, this.kml, linkData, i));\n    return this;\n  }\n\n  _filter(a) {\n    const filtered = [];\n    if (this._filters && a && a.length) {\n      a.forEach(item => {\n\n        let bool = true;\n        this._filters.forEach(f => {\n          if (f(item) === false) {\n            bool = false;\n          }\n        });\n        if (bool) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    }\n    return a;\n  }\n\n  addFilter(filter) {\n    if (!this._filters) {\n      this._filters = [];\n    }\n    this._filters.push(filter);\n    return this;\n  }\n\n  static ParseDomDocuments(xmlDom) {\n    const docs = [];\n    const docsDomNodes = xmlDom.getElementsByTagName('Document');\n    for (let i = 0; i < docsDomNodes.length; i++) {\n      const node = docsDomNodes.item(i);\n      const docsData = Object.assign(\n        {},\n        KMLParser.ParseDomDoc(node),\n        KMLParser.ParseNonSpatialDomData(node, {})\n      );\n\n      const transform = options => options;\n      docs.push(transform(docsData));\n    }\n    return docs;\n  }\n\n  static ParseDomDoc(xmlDom) {\n    return {};\n  }\n\n  static ParseDomFolders(xmlDom) {\n    const folders = [];\n    const folderDomNodes = KMLParser.ParseDomItems(xmlDom, 'Folder');\n    for (let i = 0; i < folderDomNodes.length; i++) {\n      const node = folderDomNodes[i];\n      const folderData = Object.assign(\n        {\n          type: 'folder'\n        },\n        KMLParser.ParseDomFolder(node),\n        KMLParser.ParseNonSpatialDomData(node, {})\n      );\n\n      const transform = options => options;\n      folders.push(transform(folderData));\n    }\n    return folders;\n  }\n\n  static ParseDomLinks(xmlDom) {\n    const links = [];\n    const linkDomNodes = xmlDom.getElementsByTagName('NetworkLink');\n    for (let i = 0; i < linkDomNodes.length; i++) {\n      const node = linkDomNodes.item(i);\n      const linkData = Object.assign({},\n        KMLParser.ParseDomLink(node),\n        KMLParser.ParseNonSpatialDomData(node, {})\n      );\n\n      const transform = options => options;\n      links.push(transform(linkData));\n    }\n    return links;\n  }\n\n  static ParseDomFolder(xmlDom) {\n    return {};\n  }\n\n  static ParseDomLink(xmlDom) {\n\n    const urls = xmlDom.getElementsByTagName('href');\n    const link = {\n      type: 'link'\n    };\n    if (urls.length > 0) {\n      const url = urls.item(0);\n      link.url = KMLParser.Value(url);\n    }\n    return link;\n  }\n\n  static ParseDomLines(xmlDom) {\n    const lines = [];\n    const lineDomNodes = KMLParser.ParseDomItems(xmlDom, 'LineString');\n    for (let i = 0; i < lineDomNodes.length; i++) {\n\n      const node = lineDomNodes[i];\n\n      const polygonData = Object.assign(\n        {\n          type: 'line',\n          lineColor: '#FF000000', // black\n          lineWidth: 1,\n          polyColor: '#77000000', // black semitransparent,\n          coordinates: KMLParser.ParseDomCoordinates(node) // returns an array of GLatLngs\n        },\n        KMLParser.ParseNonSpatialDomData(node, {}),\n        KMLParser.ResolveDomStyle(KMLParser.ParseDomStyle(node), xmlDom)\n      );\n\n      const rgb = KMLParser.convertKMLColorToRGB(polygonData.lineColor);\n      polygonData.lineOpacity = rgb.opacity;\n      polygonData.lineColor = rgb.color;\n\n      lines.push(polygonData);\n    }\n\n    return lines;\n  }\n\n  static ParseDomGroundOverlays(xmlDom) {\n    const lines = [];\n    const lineDomNodes = KMLParser.ParseDomItems(xmlDom, 'GroundOverlay');\n    for (let i = 0; i < lineDomNodes.length; i++) {\n\n      const node = lineDomNodes[i];\n\n      const polygonData = Object.assign(\n        {\n          type: 'imageoverlay',\n          icon: KMLParser.ParseDomIcon(node),\n          bounds: KMLParser.ParseDomBounds(node)\n        },\n        KMLParser.ParseNonSpatialDomData(node, {})\n      );\n\n      lines.push(polygonData);\n    }\n\n    return lines;\n  }\n\n  static ParseDomPolygons(xmlDom) {\n    const polygons = [];\n    const polygonDomNodes = KMLParser.ParseDomItems(xmlDom, 'Polygon');\n\n    for (let i = 0; i < polygonDomNodes.length; i++) {\n\n      const node = polygonDomNodes[i];\n\n      const polygonData = Object.assign(\n        {\n          type: 'polygon',\n          fill: true,\n          lineColor: '#FF000000', // black\n          lineWidth: 1,\n          polyColor: '#77000000', // black semitransparent,\n          coordinates: KMLParser.ParseDomCoordinates(node) // returns an array of google.maps.LatLng\n        },\n        KMLParser.ParseNonSpatialDomData(node, {}),\n        KMLParser.ResolveDomStyle(KMLParser.ParseDomStyle(node), xmlDom)\n      );\n\n      const lineRGB = KMLParser.convertKMLColorToRGB(polygonData.lineColor);\n\n      polygonData.lineOpacity = lineRGB.opacity;\n      polygonData.lineColor = lineRGB.color;\n\n      const polyRGB = KMLParser.convertKMLColorToRGB(polygonData.polyColor);\n\n      polygonData.polyOpacity = (polygonData.fill) ? polyRGB.opacity : 0;\n      polygonData.polyColor = polyRGB.color;\n\n      polygons.push(polygonData);\n    }\n    return polygons;\n  }\n\n  static ParseDomMarkers(xmlDom) {\n    const markers = [];\n    const markerDomNodes = KMLParser.ParseDomItems(xmlDom, 'Point');\n\n    for (let i = 0; i < markerDomNodes.length; i++) {\n      const node = markerDomNodes[i];\n      const coords = KMLParser.ParseDomCoordinates(node);\n      const marker = Object.assign(\n        {\n          type: 'point',\n          coordinates: coords[0] // returns an array of google.maps.LatLng\n        },\n        KMLParser.ParseNonSpatialDomData(node, {})\n      );\n\n      let icon = KMLParser.ParseDomStyle(node);\n      if (icon.charAt(0) === '#') {\n        icon = KMLParser.ResolveDomStyle(icon, xmlDom).icon;\n      }\n      if (icon) {\n        // better to not have any hint of an icon (ie: icon:null) so default can be used by caller\n        marker.icon = icon;\n      }\n      markers.push(marker);\n    }\n    return markers;\n  }\n\n  static ParseDomCoordinates(xmlDom) {\n    const coordNodes = xmlDom.getElementsByTagName('coordinates');\n    if (!coordNodes.length) {\n      console.warn(['KMLParser. DOM Node did not contain coordinates!', {\n        node: xmlDom\n      }]);\n      return null;\n    }\n    const node = coordNodes.item(0);\n    let s = KMLParser.Value(node);\n    s = s.trim();\n    const coordStrings = s.split(' ');\n    const coordinates = [];\n    Object.values(coordStrings).forEach(coord => {\n      const c = coord.split(',');\n      if (c.length > 1) {\n        // JSConsole([c[1],c[0]]);\n        coordinates.push([c[1], c[0]]);\n      }\n    });\n\n    return coordinates;\n  }\n\n  /* eslint-disable max-statements */\n  static ParseDomBounds(xmlDom) {\n    const coordNodes = xmlDom.getElementsByTagName('LatLonBox');\n    if (!coordNodes.length) {\n      console.warn(['KMLParser. DOM Node did not contain coordinates!', {\n        node: xmlDom\n      }]);\n      return null;\n    }\n    const node = coordNodes.item(0);\n    const norths = node.getElementsByTagName('north');\n    const souths = node.getElementsByTagName('south');\n    const easts = node.getElementsByTagName('east');\n    const wests = node.getElementsByTagName('west');\n\n    let north = null;\n    let south = null;\n    let east = null;\n    let west = null;\n\n    if (!norths.length) {\n      console.warn(['KMLParser. DOM LatLngBox Node did not contain north!', {\n        node: xmlDom\n      }]);\n    } else {\n      north = parseFloat(KMLParser.Value(norths.item(0)));\n    }\n    if (!souths.length) {\n      console.warn(['KMLParser. DOM LatLngBox Node did not contain south!', {\n        node: xmlDom\n      }]);\n    } else {\n      south = parseFloat(KMLParser.Value(souths.item(0)));\n    }\n    if (!easts.length) {\n      console.warn(['KMLParser. DOM LatLngBox Node did not contain east!', {\n        node: xmlDom\n      }]);\n    } else {\n      east = parseFloat(KMLParser.Value(easts.item(0)));\n    }\n    if (!wests.length) {\n      console.warn(['KMLParser. DOM LatLngBox Node did not contain west!', {\n        node: xmlDom\n      }]);\n    } else {\n      west = parseFloat(KMLParser.Value(wests.item(0)));\n    }\n    return {\n      north,\n      south,\n      east,\n      west\n    };\n  }\n  /* eslint-enable max-statements */\n\n  static ParseNonSpatialDomData(xmlDom, options) {\n    const config = Object.assign({}, {\n      maxOffset: 2\n    }, options);\n\n    const data = {\n      name: '',\n      description: null,\n      tags: {}\n    };\n\n    const names = xmlDom.getElementsByTagName('name');\n    for (let i = 0; i < names.length; i++) {\n      if (KMLParser.WithinOffsetDom(xmlDom, names.item(i), config.maxOffset)) {\n        data.name = (KMLParser.Value(names.item(i)));\n        break;\n      }\n    }\n\n    const descriptions = xmlDom.getElementsByTagName('description');\n    for (let i = 0; i < descriptions.length; i++) {\n      if (KMLParser.WithinOffsetDom(xmlDom, descriptions.item(i), config.maxOffset)) {\n        data.description = (KMLParser.Value(descriptions.item(i)));\n        break;\n      }\n    }\n\n    if (xmlDom.hasAttribute('id')) {\n      data.id = parseInt(xmlDom.getAttribute('id'), 10);\n    }\n\n    const extendedDatas = xmlDom.getElementsByTagName('ExtendedData');\n    for (let i = 0; i < extendedDatas.length; i++) {\n      if (KMLParser.WithinOffsetDom(xmlDom, extendedDatas.item(i), config.maxOffset)) {\n        for (let j = 0; j < extendedDatas.item(i).childNodes.length; j++) {\n          const c = extendedDatas.item(i).childNodes.item(j);\n          const t = KMLParser.ParseTag(c);\n          if (t.name !== '#text') { // eslint-disable-line\n            data.tags[t.name] = t.value;\n          }\n        }\n      }\n    }\n    return data;\n  }\n\n  static ParseTag(xmlDom) {\n    const tags = {\n      name: null,\n      value: {}\n    };\n\n    switch (xmlDom.nodeName) {\n    case 'Data':\n    case 'data':\n      // TODO: add data tags...\n      break;\n    case 'ID':\n      tags.name = 'ID';\n      tags.value = KMLParser.Value(xmlDom);\n      break;\n    default:\n      tags.name = xmlDom.nodeName;\n      tags.value = KMLParser.Value(xmlDom);\n      break;\n    }\n\n    return tags;\n  }\n\n  static WithinOffsetDom(parent, child, max) {\n    let current = child.parentNode;\n    for (let i = 0; i < max; i++) {\n      if (current.nodeName === (typeof parent === 'string' ? parent : parent.nodeName)) {\n        return true;\n      }\n      current = current.parentNode;\n    }\n    console.error(['KMLParser. Could not find parent node within expected bounds.', {\n      parentNode: parent,\n      childNode: child,\n      bounds: max\n    }]);\n    return false;\n  }\n\n  static ParseDomStyle(xmlDom, options) {\n\n    const config = Object.assign({}, {\n      defaultStyle: 'default'\n    }, options);\n\n    const styles = xmlDom.getElementsByTagName('styleUrl');\n    let style = config.defaultStyle;\n    if (styles.length === 0) {\n      console.warn(['KMLParser. DOM Node did not contain styleUrl!', {\n        node: xmlDom,\n        options: config\n      }]);\n    } else {\n      const node = styles.item(0);\n      style = (KMLParser.Value(node));\n    }\n    return style;\n  }\n\n  static ParseDomIcon(xmlDom, options) {\n\n    const config = Object.assign({}, {\n      defaultIcon: false,\n      defaultScale: 1.0\n    }, options);\n\n    const icons = xmlDom.getElementsByTagName('Icon');\n    let icon = config.defaultStyle;\n    let scale = config.defaultScale;\n    if (icons.length === 0) {\n      console.warn(['KMLParser. DOM Node did not contain Icon!', {\n        node: xmlDom,\n        options: config\n      }]);\n    } else {\n      const node = icons.item(0);\n      const urls = node.getElementsByTagName('href');\n      if (urls.length === 0) {\n        console.warn(['KMLParser. DOM Icon Node did not contain href!', {\n          node: xmlDom,\n          options: config\n        }]);\n      } else {\n        const hrefNode = urls.item(0);\n        icon = (KMLParser.Value(hrefNode));\n      }\n\n      const scales = node.getElementsByTagName('viewBoundScale');\n      if (scales.length === 0) {\n        console.warn(['KMLParser. DOM Icon Node did not contain viewBoundScale!', {\n          node: xmlDom,\n          options: config\n        }]);\n\n      } else {\n        const scaleNode = scales.item(0);\n        scale = parseFloat(KMLParser.Value(scaleNode));\n      }\n    }\n    return {\n      url: icon,\n      scale\n    };\n  }\n\n  /* eslint-disable max-depth, max-statements */\n  static ResolveDomStyle(style, xmlDom) {\n    const data = {};\n    const name = (style.charAt(0) === '#' ? style.substring(1, style.length) : style);\n    const styles = xmlDom.getElementsByTagName('Style');\n    for (let i = 0; i < styles.length; i++) {\n\n      const node = styles.item(i);\n      const id = node.getAttribute('id');\n      if (id === name) {\n        const lineStyles = node.getElementsByTagName('LineStyle');\n        const polyStyles = node.getElementsByTagName('PolyStyle');\n        const iconStyles = node.getElementsByTagName('href');\n        if (lineStyles.length > 0) {\n          const lineStyle = lineStyles.item(0);\n          const colors = lineStyle.getElementsByTagName('color');\n          if (colors.length > 0) {\n            const color = colors.item(0);\n            data.lineColor = KMLParser.Value(color);\n          }\n          const widths = lineStyle.getElementsByTagName('width');\n          if (widths.length > 0) {\n            const width = widths.item(0);\n            data.lineWidth = KMLParser.Value(width);\n          }\n        }\n        if (polyStyles.length > 0) {\n          const polyStyle = polyStyles.item(0);\n          const colors = polyStyle.getElementsByTagName('color');\n          if (colors.length > 0) {\n            const color = colors.item(0);\n            data.polyColor = KMLParser.Value(color);\n          }\n          const outlines = polyStyle.getElementsByTagName('outline');\n          if (outlines.length > 0) {\n            const outline = outlines.item(0);\n            const o = KMLParser.Value(outline);\n            data.outline = Boolean(o);\n          }\n        }\n        if (iconStyles.length > 0) {\n          const iconStyle = iconStyles.item(0);\n          const icon = KMLParser.Value(iconStyle);\n          data.icon = icon;\n        }\n      }\n    }\n    return data;\n  }\n  /* eslint-enable max-depth, max-statements */\n\n  /* eslint-disable */\n  static ParseDomItems(xmlDom, tag) {\n    const tagName = tag || 'Point';\n    const items = [];\n    const markerDomNodes = xmlDom.getElementsByTagName(tagName);\n    for (let i = 0; i < markerDomNodes.length; i++) {\n      const node = markerDomNodes.item(i);\n      if (tag === 'GroundOverlay') {\n        items.push(node);\n        continue;\n      }\n      const parent = (node.parentNode.nodeName === 'Placemark' ?\n        node.parentNode :\n        (node.parentNode.parentNode.nodeName === 'Placemark' ?\n          node.parentNode.parentNode : null));\n      if (parent === null) {\n        console.error(['Failed to find ParentNode for Element - ' + tagName, {\n          node: xmlDom\n        }]);\n        //  ();\n      } else {\n        items.push(parent);\n      }\n    }\n    return items;\n  }\n\n  // KML Color is defined similar to RGB except it is in the opposite order and starts with opacity,\n  // #OOBBGGRR\n  static convertKMLColorToRGB(colorString) {\n    const colorStr = colorString.replace('#', '');\n    while (colorStr.length < 6) {\n      colorStr = '0' + colorStr;\n    } // make sure line is dark!\n    while (colorStr.length < 8) {\n      colorStr = 'F' + colorStr;\n    } // make sure opacity is a large fraction\n    if (colorStr.length > 8) {\n      colorStr = colorStr.substring(0, 8);\n    }\n    const color = colorStr.substring(6, 8) + colorStr.substring(4, 6) + colorStr.substring(2, 4);\n    const opacity = ((parseInt(colorStr.substring(0, 2), 16)) * 1.000) / (parseInt('FF', 16));\n\n    const rgbVal = {\n      color: '#' + color,\n      opacity: opacity\n    }\n\n    return rgbVal;\n  }\n\n  static RGBColorToKML(rgb, opacity) {\n    const colorStr = rgb.replace('#', '');\n    while (colorStr.length < 6) {\n      colorStr = '0' + colorStr;\n    } //make sure line is dark!\n    if (colorStr.length > 6) {\n      colorStr = colorStr.substring(0, 6);\n    }\n\n    if ((opacity != null)) {\n      if (opacity >= 0.0 && opacity <= 1.0) {\n        const opacityNum = opacity;\n      } else if (parseInt(opacity) >= 0.0 && parseInt(opacity) <= 1.0) {\n        const opacityNum = parseInt(opacity);\n      }\n    }\n    if ((opacityNum === null)) {\n      const opacityNum = 1.0;\n    }\n\n    const opacityNum = (opacityNum * 255.0);\n    const opacityStr = opacityNum.toString(16);\n\n    const kmlStr =\n      opacityStr.substring(0, 2) + '' +\n      colorStr.substring(4, 6) +\n      colorStr.substring(2, 4) +\n      colorStr.substring(0, 2);\n\n    return kmlStr;\n  }\n\n  static Value(node) {\n    const value = node.nodeValue;\n    if (value) return value;\n    let str = '';\n    try {\n      if (node.childNodes && node.childNodes.length) {\n        Object.values(KMLParser.ChildNodesArray(node)).forEach(c => {\n          str += KMLParser.Value(c);\n        });\n      }\n    } catch (e) {\n      console.error(['SimpleKML Parser Exception', e]);\n    }\n    return str;\n  }\n\n  static ChildNodesArray(node) {\n    const array = [];\n    if (node.childNodes && node.childNodes.length > 0) {\n      for (let i = 0; i < node.childNodes.length; i++) {\n        array.push(node.childNodes.item(i));\n      }\n\n    }\n    return array;\n  }\n}\n"],"file":"kml-parser.js"}